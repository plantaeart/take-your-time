/* FIX: Override PrimeNG TabView CSS that hides tabs in production mode */
.p-tabview-scrollable .p-tabview-nav-container {
  overflow: visible !important;
}

.table-management-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
  background-color: var(--surface-card);
  border-radius: 6px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.table-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  gap: 1rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid var(--surface-border);
}

.header-left h3 {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--text-color);
  margin: 0;
}

.header-actions {
  display: flex;
  gap: 0.75rem;
  align-items: center;
  flex-wrap: wrap;
}

/* Global Search Input Styling */
.header-actions .p-input-icon-left {
  position: relative;
  display: inline-flex;
  align-items: center;
}

.header-actions .p-input-icon-left .pi-search {
  position: absolute;
  left: 0.75rem;
  color: var(--text-color-secondary);
  z-index: 1;
  font-size: 0.875rem;
}

.global-filter-input {
  padding: 0.75rem 0.75rem 0.75rem 2.5rem !important;
  border: 1px solid var(--surface-border) !important;
  border-radius: 6px !important;
  background: var(--surface-card) !important;
  color: var(--text-color) !important;
  font-size: 0.875rem;
  min-width: 250px;
  height: 42px;
  transition: all 0.2s ease;
  box-sizing: border-box;
}

.global-filter-input:focus {
  border-color: var(--primary-color) !important;
  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2) !important;
  outline: none !important;
  background: var(--surface-card) !important;
}

.global-filter-input:hover:not(:focus) {
  border-color: var(--surface-hover) !important;
}

.global-filter-input::placeholder {
  color: var(--text-color-secondary);
  opacity: 0.7;
}

.table-title {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--text-color);
  margin: 0;
}

.table-actions {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  flex-wrap: wrap;
}

/* Responsive adjustments for header */
@media (max-width: 768px) {
  .table-header {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
  }
  
  .header-actions {
    justify-content: center;
    flex-wrap: wrap;
  }
  
  .global-filter-input {
    min-width: 200px;
    width: 100%;
    max-width: 300px;
  }
}

@media (max-width: 576px) {
  .header-actions {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .global-filter-input {
    min-width: auto;
    width: 100%;
  }
}

/* Button styling enhancements */
.header-actions .p-button {
  white-space: nowrap;
  font-size: 0.875rem;
  padding: 0.5rem 1rem;
  border-radius: 6px;
  transition: all 0.2s ease;
}

.header-actions .p-button.p-button-text {
  padding: 0.5rem;
  background: transparent;
  border: 1px solid transparent;
}

.header-actions .p-button.p-button-text:hover {
  background: var(--surface-hover);
  border-color: var(--surface-border);
}

.header-actions .p-button .p-button-icon {
  font-size: 0.875rem;
}

/* Ensure consistent height for all header elements */
.header-actions > * {
  height: 42px;
  display: flex;
  align-items: center;
}

.header-actions .p-input-icon-left {
  height: auto;
}

.search-container {
  display: flex;
  gap: 1rem;
  align-items: center;
  flex-wrap: wrap;
  margin-bottom: 1rem;
}

.search-input {
  flex: 1;
  min-width: 250px;
}

.filter-section {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin-bottom: 1rem;
  padding: 1rem;
  background-color: var(--surface-section);
  border-radius: 4px;
  border: 1px solid var(--surface-border);
}

.filter-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.filter-label {
  font-weight: 500;
  color: var(--text-color);
  font-size: 0.875rem;
}

.table-content {
  display: flex;
  flex-direction: column;
  min-height: 400px;
  overflow-x: auto; /* Enable horizontal scrolling */
  overflow-y: visible;
}

.table-grid {
  display: flex;
  flex-direction: column;
  border: 1px solid var(--surface-border);
  border-radius: 4px;
  background-color: var(--surface-card);
  min-width: max-content; /* Allow table to expand beyond container */
}

.table-grid-header {
  display: grid; /* Use CSS Grid for precise alignment */
  /* grid-template-columns set dynamically via [style.grid-template-columns] */
  gap: 0;
  padding: 1rem 0.75rem;
  background-color: var(--surface-section);
  border-bottom: 2px solid var(--surface-border);
  font-weight: 600;
  color: var(--text-color);
  min-width: max-content;
  position: sticky;
  top: 0;
  z-index: 10;
}

.table-grid-header .header-cell {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
  border-right: 1px solid var(--surface-border);
  min-height: 3rem;
}

.table-grid-header .header-cell:last-child {
  border-right: none;
}

.table-grid-header .header-cell.select-header {
  justify-content: center;
  padding: 0.5rem 0.3rem;
  min-height: 3rem;
}

.table-grid-header .header-cell.actions-header {
  justify-content: center;
  padding: 0.5rem 0.3rem;
  min-height: 3rem;
  font-weight: 600;
  color: var(--text-color);
  text-align: center;
}

.table-grid-header .header-cell.data-header {
  /* Grid column sizing handled automatically */
  overflow: hidden;
}

/* Column header content layout */
.column-header-content {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 0.5rem;
  width: 100%;
}

.column-title {
  font-weight: 600;
  color: var(--text-color);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  flex: 1;
}

.sort-icon {
  cursor: pointer;
  color: var(--text-color-secondary);
  transition: color 0.2s ease;
  font-size: 0.875rem;
  flex-shrink: 0;
}

.sort-icon:hover {
  color: var(--primary-color);
}

.sort-icon.active {
  color: var(--primary-color);
}

.filter-button {
  flex-shrink: 0;
}

/* Select checkbox styling */
.select-checkbox {
  width: 18px;
  height: 18px;
  cursor: pointer;
  margin: 0;
  accent-color: var(--primary-color);
}

.table-grid-body {
  display: flex;
  flex-direction: column;
  min-width: max-content; /* Allow body to expand */
}

/* Row cell alignment - applies to row-tab component */
:host ::ng-deep app-row-tab {
  display: flex;
  width: 100%;
}

:host ::ng-deep app-row-tab .table-row {
  display: grid !important; /* Use grid to match header */
  grid-template-columns: var(--grid-template-columns) !important; /* Use inherited grid template */
  width: 100%;
  align-items: center;
  border-bottom: 1px solid var(--surface-border);
  background-color: var(--surface-card);
  transition: background-color 0.2s ease;
  padding: 0 !important;
  gap: 0 !important;
}

:host ::ng-deep app-row-tab .table-row:hover {
  background-color: var(--surface-hover);
}

:host ::ng-deep app-row-tab .table-cell {
  display: flex;
  align-items: center;
  padding: 0.5rem !important; /* Match header cell padding exactly */
  border-right: 1px solid var(--surface-border);
  overflow: hidden;
  text-overflow: ellipsis;
  min-height: 3rem; /* Match header cell height */
}

:host ::ng-deep app-row-tab .table-cell:last-child {
  border-right: none;
}

/* Simplified cell styling for grid layout */
:host ::ng-deep app-row-tab .table-cell.select-cell {
  justify-content: center;
  padding: 0.5rem 0.3rem !important;
  overflow: visible !important; /* Ensure checkbox is visible */
}

:host ::ng-deep app-row-tab .table-cell.actions-cell {
  justify-content: center;
  gap: 0.25rem;
  padding: 0.5rem 0.3rem !important;
  overflow: visible !important; /* Ensure action buttons are visible */
}

:host ::ng-deep app-row-tab .table-cell.data-cell {
  overflow: hidden;
  text-overflow: ellipsis;
  align-items: center; /* Center align like headers */
  padding: 0.5rem !important; /* Match header padding */
}

/* Special handling for dropdown inputs - allow overflow for dropdown panels */
:host ::ng-deep app-row-tab .table-cell.data-cell:has(app-dropdown-input) {
  overflow: visible !important;
}

/* Fallback for browsers that don't support :has() */
:host ::ng-deep app-row-tab .table-cell.data-cell app-dropdown-input {
  overflow: visible !important;
}

/* Special handling for description columns */
:host ::ng-deep app-row-tab .table-cell.data-cell .display-field {
  width: 100%;
  align-items: flex-start;
}

:host ::ng-deep app-row-tab .table-cell.data-cell .display-field span {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  line-height: 1.4;
}

/* Allow wrapping for description fields when they have more space */
:host ::ng-deep app-row-tab .table-cell.data-cell[data-field="description"] .display-field span {
  white-space: normal;
  word-wrap: break-word;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  line-clamp: 2; /* Standard property for compatibility */
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem;
  text-align: center;
  color: var(--text-color-secondary);
}

.empty-state-icon {
  font-size: 3rem;
  margin-bottom: 1rem;
  color: var(--text-color-secondary);
}

.empty-state-title {
  font-size: 1.25rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
}

.empty-state-message {
  font-size: 0.875rem;
  max-width: 300px;
}

.loading-state {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 3rem;
  gap: 1rem;
  color: var(--text-color-secondary);
}

.pagination-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  border-top: 1px solid var(--surface-border);
  background-color: var(--surface-section);
  flex-wrap: wrap;
  gap: 1rem;
}

.pagination-info {
  color: var(--text-color-secondary);
  font-size: 0.875rem;
}

.pagination-controls {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.bulk-actions-container {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  padding: 0.75rem;
  background-color: var(--highlight-bg);
  border: 1px solid var(--primary-color);
  border-radius: 4px;
  margin-bottom: 1rem;
  transition: all 0.2s ease;
}

.bulk-actions-info {
  color: var(--primary-color);
  font-weight: 500;
  font-size: 0.875rem;
}

.bulk-actions-buttons {
  display: flex;
  gap: 0.25rem;
  margin-left: auto;
}

/* Responsive design */
@media (max-width: 768px) {
  .table-management-container {
    padding: 0.5rem;
    gap: 0.75rem;
  }
  
  .table-header {
    flex-direction: column;
    align-items: stretch;
    gap: 0.75rem;
  }
  
  .table-actions {
    justify-content: center;
  }
  
  .search-container {
    flex-direction: column;
    gap: 0.75rem;
  }
  
  .search-input {
    min-width: 100%;
  }
  
  .filter-section {
    grid-template-columns: 1fr;
    gap: 0.75rem;
    padding: 0.75rem;
  }
  
  .table-grid-header {
    grid-template-columns: auto 1fr;
    gap: 0.25rem;
    padding: 0.75rem 0.5rem;
  }
  
  .pagination-container {
    flex-direction: column;
    align-items: stretch;
    text-align: center;
  }
  
  .bulk-actions-container {
    flex-direction: column;
    align-items: stretch;
    text-align: center;
  }
  
  .bulk-actions-buttons {
    margin-left: 0;
    justify-content: center;
  }
}

@media (max-width: 480px) {
  .table-management-container {
    padding: 0.25rem;
    margin: 0.25rem;
  }
  
  .filter-section {
    padding: 0.5rem;
  }
  
  .table-grid-header {
    padding: 0.5rem 0.25rem;
    font-size: 0.875rem;
  }
}

/* ============= FILTER BUTTON STYLES ============= */
.filter-button {
  margin-left: 0.25rem;
}

/* ============= FILTER POPUP STYLES ============= */
.filter-popup-content {
  padding: 1rem;
  min-width: 250px;
}

.filter-field {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.filter-field label {
  font-weight: 600;
  color: var(--text-color);
  margin-bottom: 0.25rem;
}

.filter-input,
.filter-dropdown {
  width: 100%;
  margin-top: 0.5rem;
}

.filter-actions {
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
  margin-top: 1rem;
}

/* ============= PRIMENG COMPONENT OVERRIDES ============= */
/* Use ::ng-deep sparingly for PrimeNG component styling */

:host ::ng-deep .p-paginator {
  border-radius: 6px;
  border: 1px solid var(--surface-border);
  background: var(--surface-card);
  padding: 0.75rem;
}

:host ::ng-deep .p-paginator .p-paginator-pages .p-paginator-page {
  border-radius: 4px;
  min-width: 2.5rem;
  height: 2.5rem;
}

:host ::ng-deep .p-paginator .p-paginator-pages .p-paginator-page.p-highlight {
  background: var(--primary-color);
  color: var(--primary-color-text);
}

:host ::ng-deep .p-button {
  border-radius: 6px;
  font-weight: 500;
  transition: all 0.2s ease;
}

:host ::ng-deep .p-button.p-button-sm {
  padding: 0.375rem 0.75rem;
  font-size: 0.875rem;
}

:host ::ng-deep .p-button.p-button-icon-only {
  width: 2.5rem;
  height: 2.5rem;
}

:host ::ng-deep .p-inputtext {
  border-radius: 6px;
  border: 1px solid var(--surface-border);
  padding: 0.75rem;
  font-size: 0.875rem;
  transition: all 0.2s ease;
}

:host ::ng-deep .p-inputtext:focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);
}

:host ::ng-deep .p-dropdown {
  border-radius: 6px;
  border: 1px solid var(--surface-border);
}

:host ::ng-deep .p-dropdown:not(.p-disabled):hover {
  border-color: var(--primary-color);
}

:host ::ng-deep .p-dropdown.p-focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);
}

:host ::ng-deep .p-multiselect {
  border-radius: 6px;
  border: 1px solid var(--surface-border);
}

:host ::ng-deep .p-multiselect:not(.p-disabled):hover {
  border-color: var(--primary-color);
}

:host ::ng-deep .p-multiselect.p-focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);
}

:host ::ng-deep .p-overlaypanel {
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  border: 1px solid var(--surface-border);
}

:host ::ng-deep .p-overlaypanel .p-overlaypanel-content {
  border-radius: 8px;
}

:host ::ng-deep .p-checkbox .p-checkbox-box {
  border-radius: 4px;
  border: 2px solid var(--surface-border);
  width: 1.25rem;
  height: 1.25rem;
}

:host ::ng-deep .p-checkbox .p-checkbox-box.p-highlight {
  background: var(--primary-color);
  border-color: var(--primary-color);
}

:host ::ng-deep .p-checkbox .p-checkbox-box .p-checkbox-icon {
  font-size: 0.75rem;
  color: var(--primary-color-text);
}

/* Table-specific PrimeNG overrides */
:host ::ng-deep .p-progressspinner {
  width: 2rem;
  height: 2rem;
}

:host ::ng-deep .p-progressspinner .p-progressspinner-svg {
  width: 2rem;
  height: 2rem;
}

/* Message styling */
:host ::ng-deep .p-message {
  border-radius: 6px;
  border-width: 1px;
}

:host ::ng-deep .p-message.p-message-info {
  background: rgba(var(--blue-50));
  border-color: var(--blue-200);
  color: var(--blue-700);
}

:host ::ng-deep .p-message.p-message-success {
  background: rgba(var(--green-50));
  border-color: var(--green-200);
  color: var(--green-700);
}

:host ::ng-deep .p-message.p-message-warn {
  background: rgba(var(--yellow-50));
  border-color: var(--yellow-200);
  color: var(--yellow-700);
}

:host ::ng-deep .p-message.p-message-error {
  background: rgba(var(--red-50));
  border-color: var(--red-200);
  color: var(--red-700);
}
