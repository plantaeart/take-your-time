.table-row {
  display: flex; /* Changed from grid to flex for horizontal layout */
  gap: 0;
  padding: 0.75rem;
  border-bottom: 1px solid var(--surface-border);
  transition: all 0.2s ease;
  min-width: fit-content; /* Allow row to expand */
  align-items: center;
}

.table-row:hover {
  background-color: var(--surface-hover);
}

.table-row.selected {
  background-color: var(--highlight-bg);
  border-left: 3px solid var(--primary-color);
}

.table-row.editing {
  background-color: var(--surface-section);
  border-left: 3px solid var(--primary-color);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.table-cell {
  display: flex;
  align-items: center;
  min-height: 2.5rem;
  padding: 0.25rem 0.5rem;
  border-right: 1px solid var(--surface-border);
  flex-shrink: 0; /* Prevent cells from shrinking */
}

.table-cell:last-child {
  border-right: none;
}

.table-cell.select-cell {
  width: 60px;
  justify-content: center;
  flex-shrink: 0;
  overflow: visible !important; /* Ensure checkbox is always visible */
}

.table-cell.select-cell .select-checkbox {
  cursor: pointer;
  transform: scale(1.1);
}

.table-cell.actions-cell {
  /* Use configured width from CSS custom property */
  width: var(--actions-column-width, 8.5rem);
  min-width: var(--actions-column-width, 8.5rem);
  justify-content: center;
  flex-shrink: 0;
  overflow: visible !important; /* Ensure action buttons are always visible */
}

.table-cell.actions-cell .action-buttons {
  display: flex;
  gap: 0.25rem;
}

.table-cell.data-cell {
  min-width: 150px; /* Match header minimum width */
  max-width: 300px; /* Match header maximum width */
  flex: 0 0 auto; /* Don't grow, don't shrink, auto width */
  overflow: hidden; /* Hide overflow content */
}

.table-cell.data-cell .display-field {
  display: flex;
  align-items: center;
  width: 100%;
}

.table-cell.data-cell .display-field span {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.table-cell.data-cell .display-field .table-image {
  max-width: 50px;
  max-height: 50px;
  object-fit: cover;
  border-radius: 4px;
  border: 1px solid var(--surface-border);
}

.table-cell.data-cell .display-field .no-image {
  color: var(--text-color-secondary);
  font-style: italic;
  font-size: 0.875rem;
  width: 100%;
}

.table-cell.data-cell .display-field i {
  font-size: 1.1rem;
}

.table-cell.data-cell .display-field i.text-green-500 {
  color: var(--green-500);
}

.table-cell.data-cell .display-field i.text-red-500 {
  color: var(--red-500);
}

.table-cell.data-cell .edit-field {
  width: 100%;
  position: relative;
}

.table-cell.data-cell .edit-field .field-error {
  display: block;
  color: var(--red-500);
  font-size: 0.75rem;
  margin-top: 0.25rem;
  line-height: 1.2;
}

/* Responsive design for smaller screens */
@media (max-width: 768px) {
  .table-row {
    grid-template-columns: auto 1fr;
    gap: 0.25rem;
    padding: 0.5rem;
  }
  
  .table-cell.select-cell {
    width: 2.5rem;
  }
  
  .table-cell.actions-cell {
    /* Use configured width from CSS custom property (fallback to 7rem for mobile) */
    width: var(--actions-column-width, 7rem);
    min-width: var(--actions-column-width, 7rem);
  }
  
  .table-cell.actions-cell .action-buttons {
    gap: 0.125rem;
  }
  
  .table-cell.data-cell .display-field {
    font-size: 0.875rem;
  }
  
  .table-cell.data-cell .display-field .table-image {
    max-width: 35px;
    max-height: 35px;
  }
}

/* Auto-generated ID styling for new items */
.auto-generated-id {
  color: var(--text-color-secondary);
  font-style: italic;
  font-size: 0.875rem;
  opacity: 0.8;
}

/* ============= HIERARCHICAL STYLES ============= */

/* Expansion button cell */
.expansion-cell {
  width: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  margin-right: 0.5rem;
}

.hierarchy-spacer {
  width: 40px;
  height: 100%;
}

/* Hierarchy indentation spacers */
.hierarchy-indent-spacer {
  width: 40px;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  border-right: 1px solid var(--surface-border);
  background-color: var(--surface-50);
  position: relative;
}

.hierarchy-indent-spacer::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 0;
  bottom: 0;
  width: 1px;
  background-color: var(--primary-color-300);
  opacity: 0.5;
}

/* Hierarchy level styling */
.hierarchy-level-0 {
  font-weight: 500;
  background-color: var(--surface-0);
}

.hierarchy-level-1 {
  background-color: var(--surface-50);
  border-left: 2px solid var(--primary-color-300);
}

.hierarchy-level-2 {
  background-color: var(--surface-100);
  border-left: 2px solid var(--primary-color-400);
}

.hierarchy-level-3 {
  background-color: var(--surface-150);
  border-left: 2px solid var(--primary-color-500);
}

.hierarchy-level-4 {
  background-color: var(--surface-200);
  border-left: 2px solid var(--primary-color-600);
}

/* Additional levels */
.table-row[class*="hierarchy-level-"] {
  position: relative;
}

.table-row[class*="hierarchy-level-"]:before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 3px;
  background: linear-gradient(
    to bottom,
    var(--primary-color-300),
    var(--primary-color-500)
  );
}

/* Hover effects for hierarchy */
.hierarchy-level-0:hover {
  background-color: var(--surface-hover);
}

.hierarchy-level-1:hover {
  background-color: var(--surface-100);
}

.hierarchy-level-2:hover {
  background-color: var(--surface-150);
}

.hierarchy-level-3:hover {
  background-color: var(--surface-200);
}

.hierarchy-level-4:hover {
  background-color: var(--surface-250);
}

/* Loading state for expansion */
.expansion-cell .p-button[loading] .pi {
  animation: rotation 1s infinite linear;
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}